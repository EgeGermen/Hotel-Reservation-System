// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.Persistence.Contexts;

#nullable disable

namespace WebApi.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("sifre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Identity.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("AdiSoyadi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AppUser");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.KullaniciKart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("KartCVV")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KartIsim")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KartNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KartSKT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KullaniciId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("KullaniciKartlar");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.OdaTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<double?>("IndirimOrani")
                        .HasColumnType("double precision");

                    b.Property<int>("Kapasite")
                        .HasColumnType("integer");

                    b.Property<int>("OdaSayisi")
                        .HasColumnType("integer");

                    b.Property<string>("OdaTipiAdi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("OtelId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OtelId");

                    b.ToTable("OdaTipleri");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.OdaTipiResim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OdaTipiId")
                        .HasColumnType("integer");

                    b.Property<string>("ResimUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OdaTipiId");

                    b.ToTable("OdaTipiResimler");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Odeme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AppUserId")
                        .HasColumnType("text");

                    b.Property<int>("Durum")
                        .HasColumnType("integer");

                    b.Property<string>("KartCVV")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KartIsim")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KartNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KartSKT")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("OdemeTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("RezervasyonId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Yontem")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("RezervasyonId");

                    b.ToTable("Odemeler");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Otel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AdminId")
                        .HasColumnType("integer");

                    b.Property<string>("AdresSatiri1")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("OdaSayisi")
                        .HasColumnType("integer");

                    b.Property<string>("OtelAdi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int?>("OtelId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Puan")
                        .HasColumnType("numeric");

                    b.Property<string>("Sehir")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Ulke")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("AdminId");

                    b.ToTable("Oteller");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.OtelResim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("OtelId")
                        .HasColumnType("integer");

                    b.Property<string>("ResimUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OtelId");

                    b.ToTable("OtelResimler");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Rezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AppUserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CikisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Durum")
                        .HasColumnType("integer");

                    b.Property<DateTime>("GirisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("OdaTipiId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("RezervasyonTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("ToplamUcret")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("OdaTipiId");

                    b.ToTable("Rezervasyonlar");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.OdaTipi", b =>
                {
                    b.HasOne("WebApi.Domain.Entities.Otel", "Otel")
                        .WithMany("OdaTipleri")
                        .HasForeignKey("OtelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Otel");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.OdaTipiResim", b =>
                {
                    b.HasOne("WebApi.Domain.Entities.OdaTipi", "OdaTipi")
                        .WithMany("OdaTipiResimler")
                        .HasForeignKey("OdaTipiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OdaTipi");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Odeme", b =>
                {
                    b.HasOne("WebApi.Domain.Entities.Identity.AppUser", null)
                        .WithMany("Odemeler")
                        .HasForeignKey("AppUserId");

                    b.HasOne("WebApi.Domain.Entities.Rezervasyon", "Rezervasyon")
                        .WithMany("Odemeler")
                        .HasForeignKey("RezervasyonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rezervasyon");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Otel", b =>
                {
                    b.HasOne("WebApi.Domain.Entities.Admin", "Admin")
                        .WithMany("Oteller")
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.OtelResim", b =>
                {
                    b.HasOne("WebApi.Domain.Entities.Otel", "Otel")
                        .WithMany("OtelResimler")
                        .HasForeignKey("OtelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Otel");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Rezervasyon", b =>
                {
                    b.HasOne("WebApi.Domain.Entities.Identity.AppUser", "AppUser")
                        .WithMany("Rezervasyonlar")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Domain.Entities.OdaTipi", "OdaTipi")
                        .WithMany()
                        .HasForeignKey("OdaTipiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("OdaTipi");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Admin", b =>
                {
                    b.Navigation("Oteller");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Identity.AppUser", b =>
                {
                    b.Navigation("Odemeler");

                    b.Navigation("Rezervasyonlar");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.OdaTipi", b =>
                {
                    b.Navigation("OdaTipiResimler");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Otel", b =>
                {
                    b.Navigation("OdaTipleri");

                    b.Navigation("OtelResimler");
                });

            modelBuilder.Entity("WebApi.Domain.Entities.Rezervasyon", b =>
                {
                    b.Navigation("Odemeler");
                });
#pragma warning restore 612, 618
        }
    }
}
